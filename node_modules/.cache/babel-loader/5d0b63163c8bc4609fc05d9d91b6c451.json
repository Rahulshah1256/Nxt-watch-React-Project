{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rahul Kumar\\\\Downloads\\\\Nxt-watch-React-Project\\\\src\\\\components\\\\GamingVideos\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport Cookies from 'js-cookie';\nimport Loader from 'react-loader-spinner';\nimport { SiYoutubegaming } from 'react-icons/si';\nimport Header from '../Header';\nimport NavigationBar from '../NavigationBar';\nimport ThemeAndVideoContext from '../../context/ThemeAndVideoContext';\nimport FailureView from '../FailureView';\nimport GameVideoCard from '../GameVideoCard';\nimport { GamingContainer, GamingTitleIconContainer, GamingVideoTitle, GamingVideoList, GamingText, LoaderContainer } from './styledComponents';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS'\n};\nconst GamingVideos = () => {\n  _s();\n  const [gamingVideos, setGamingVideos] = useState([]);\n  const [apiStatus, setApiStatus] = useState(apiStatusConstants.initial);\n  useEffect(() => {\n    getVideos();\n  }, []);\n  const getVideos = async () => {\n    setApiStatus(apiStatusConstants.inProgress);\n    const jwtToken = Cookies.get('jwt_token');\n    const url = `https://apis.ccbp.in/videos/gaming`;\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`\n      },\n      method: 'GET'\n    };\n    try {\n      const response = await fetch(url, options);\n      if (response.ok) {\n        const data = await response.json();\n        const updatedData = data.videos.map(eachVideo => ({\n          id: eachVideo.id,\n          title: eachVideo.title,\n          thumbnailUrl: eachVideo.thumbnail_url,\n          viewCount: eachVideo.view_count\n        }));\n        setGamingVideos(updatedData);\n        setApiStatus(apiStatusConstants.success);\n      } else {\n        setApiStatus(apiStatusConstants.failure);\n      }\n    } catch (error) {\n      console.error('Error fetching gaming videos:', error);\n      setApiStatus(apiStatusConstants.failure);\n    }\n  };\n  const renderLoadingView = () => /*#__PURE__*/_jsxDEV(LoaderContainer, {\n    \"data-testid\": \"loader\",\n    children: /*#__PURE__*/_jsxDEV(Loader, {\n      type: \"ThreeDots\",\n      color: \"#0b69ff\",\n      height: \"50\",\n      width: \"50\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n  const renderVideosView = () => /*#__PURE__*/_jsxDEV(GamingVideoList, {\n    children: gamingVideos.map(eachVideo => /*#__PURE__*/_jsxDEV(GameVideoCard, {\n      videoDetails: eachVideo\n    }, eachVideo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n  const onRetry = () => {\n    getVideos();\n  };\n  const renderFailureView = () => /*#__PURE__*/_jsxDEV(FailureView, {\n    onRetry: onRetry\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 35\n  }, this);\n  const renderTrendingVideos = () => {\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return renderVideosView();\n      case apiStatusConstants.failure:\n        return renderFailureView();\n      case apiStatusConstants.inProgress:\n        return renderLoadingView();\n      default:\n        return null;\n    }\n  };\n  const {\n    isDarkTheme\n  } = useContext(ThemeAndVideoContext);\n  const bgColor = isDarkTheme ? '#0f0f0f' : '#f9f9f9';\n  const textColor = isDarkTheme ? '#f9f9f9' : '#231f20';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GamingContainer, {\n      \"data-testid\": \"gaming\",\n      bgColor: bgColor,\n      children: [/*#__PURE__*/_jsxDEV(GamingVideoTitle, {\n        children: [/*#__PURE__*/_jsxDEV(GamingTitleIconContainer, {\n          children: /*#__PURE__*/_jsxDEV(SiYoutubegaming, {\n            size: 35,\n            color: \"#ff0000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GamingText, {\n          color: textColor,\n          children: \"Gaming\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), renderTrendingVideos()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(GamingVideos, \"m82OLmxN9Lw1VC0DkFAPm/caehg=\");\n_c = GamingVideos;\nexport default GamingVideos;\nvar _c;\n$RefreshReg$(_c, \"GamingVideos\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Cookies","Loader","SiYoutubegaming","Header","NavigationBar","ThemeAndVideoContext","FailureView","GameVideoCard","GamingContainer","GamingTitleIconContainer","GamingVideoTitle","GamingVideoList","GamingText","LoaderContainer","jsxDEV","_jsxDEV","apiStatusConstants","initial","success","failure","inProgress","GamingVideos","_s","gamingVideos","setGamingVideos","apiStatus","setApiStatus","getVideos","jwtToken","get","url","options","headers","Authorization","method","response","fetch","ok","data","json","updatedData","videos","map","eachVideo","id","title","thumbnailUrl","thumbnail_url","viewCount","view_count","error","console","renderLoadingView","children","type","color","height","width","fileName","_jsxFileName","lineNumber","columnNumber","renderVideosView","videoDetails","onRetry","renderFailureView","renderTrendingVideos","isDarkTheme","bgColor","textColor","size","_c","$RefreshReg$"],"sources":["C:/Users/Rahul Kumar/Downloads/Nxt-watch-React-Project/src/components/GamingVideos/index.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport Loader from 'react-loader-spinner';\r\nimport { SiYoutubegaming } from 'react-icons/si';\r\nimport Header from '../Header';\r\nimport NavigationBar from '../NavigationBar';\r\nimport ThemeAndVideoContext from '../../context/ThemeAndVideoContext';\r\nimport FailureView from '../FailureView';\r\nimport GameVideoCard from '../GameVideoCard';\r\nimport {\r\n  GamingContainer,\r\n  GamingTitleIconContainer,\r\n  GamingVideoTitle,\r\n  GamingVideoList,\r\n  GamingText,\r\n  LoaderContainer,\r\n} from './styledComponents';\r\n\r\nconst apiStatusConstants = {\r\n  initial: 'INITIAL',\r\n  success: 'SUCCESS',\r\n  failure: 'FAILURE',\r\n  inProgress: 'IN_PROGRESS',\r\n};\r\n\r\nconst GamingVideos = () => {\r\n  const [gamingVideos, setGamingVideos] = useState([]);\r\n  const [apiStatus, setApiStatus] = useState(apiStatusConstants.initial);\r\n\r\n  useEffect(() => {\r\n    getVideos();\r\n  }, []);\r\n\r\n  const getVideos = async () => {\r\n    setApiStatus(apiStatusConstants.inProgress);\r\n    const jwtToken = Cookies.get('jwt_token');\r\n    const url = `https://apis.ccbp.in/videos/gaming`;\r\n    const options = {\r\n      headers: {\r\n        Authorization: `Bearer ${jwtToken}`,\r\n      },\r\n      method: 'GET',\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, options);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        const updatedData = data.videos.map(eachVideo => ({\r\n          id: eachVideo.id,\r\n          title: eachVideo.title,\r\n          thumbnailUrl: eachVideo.thumbnail_url,\r\n          viewCount: eachVideo.view_count,\r\n        }));\r\n        setGamingVideos(updatedData);\r\n        setApiStatus(apiStatusConstants.success);\r\n      } else {\r\n        setApiStatus(apiStatusConstants.failure);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching gaming videos:', error);\r\n      setApiStatus(apiStatusConstants.failure);\r\n    }\r\n  };\r\n\r\n  const renderLoadingView = () => (\r\n    <LoaderContainer data-testid=\"loader\">\r\n      <Loader type=\"ThreeDots\" color=\"#0b69ff\" height=\"50\" width=\"50\" />\r\n    </LoaderContainer>\r\n  );\r\n\r\n  const renderVideosView = () => (\r\n    <GamingVideoList>\r\n      {gamingVideos.map(eachVideo => (\r\n        <GameVideoCard key={eachVideo.id} videoDetails={eachVideo} />\r\n      ))}\r\n    </GamingVideoList>\r\n  );\r\n\r\n  const onRetry = () => {\r\n    getVideos();\r\n  };\r\n\r\n  const renderFailureView = () => <FailureView onRetry={onRetry} />;\r\n\r\n  const renderTrendingVideos = () => {\r\n    switch (apiStatus) {\r\n      case apiStatusConstants.success:\r\n        return renderVideosView();\r\n      case apiStatusConstants.failure:\r\n        return renderFailureView();\r\n      case apiStatusConstants.inProgress:\r\n        return renderLoadingView();\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const { isDarkTheme } = useContext(ThemeAndVideoContext);\r\n  const bgColor = isDarkTheme ? '#0f0f0f' : '#f9f9f9';\r\n  const textColor = isDarkTheme ? '#f9f9f9' : '#231f20';\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <NavigationBar />\r\n      <GamingContainer data-testid=\"gaming\" bgColor={bgColor}>\r\n        <GamingVideoTitle>\r\n          <GamingTitleIconContainer>\r\n            <SiYoutubegaming size={35} color=\"#ff0000\" />\r\n          </GamingTitleIconContainer>\r\n          <GamingText color={textColor}>Gaming</GamingText>\r\n        </GamingVideoTitle>\r\n        {renderTrendingVideos()}\r\n      </GamingContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GamingVideos;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}